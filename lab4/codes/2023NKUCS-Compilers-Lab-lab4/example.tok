INT	int
ID	a
SEMICOLON	;
INT	int
ID	main
LPAREN	(
INT	int
ID	m
RPAREN	)
LBRACE	{
INT	int
ID	a
SEMICOLON	;
ID	a
ASSIGN	=
NUMBER	1	1
ADD	+
NUMBER	2	2
SEMICOLON	;
IF	if
LPAREN	(
ID	a
LESS	<
NUMBER	5	5
RPAREN	)
RETURN	return
NUMBER	1	1
SEMICOLON	;
RETURN	return
NUMBER	0	0
SEMICOLON	;
RBRACE	}
INT	int
ID	main
LPAREN	(
RPAREN	)
LBRACE	{
INT	int
ID	a
SEMICOLON	;
INT	int
ID	b
SEMICOLON	;
INT	int
ID	c
SEMICOLON	;
INT	int
ID	d
SEMICOLON	;
INT	int
ID	result
SEMICOLON	;
ID	a
ASSIGN	=
NUMBER	5	5
SEMICOLON	;
ID	b
ASSIGN	=
NUMBER	5	5
SEMICOLON	;
ID	c
ASSIGN	=
NUMBER	1	1
SEMICOLON	;
ID	d
ASSIGN	=
SUB	-
NUMBER	2	2
SEMICOLON	;
ID	result
ASSIGN	=
NUMBER	2	2
SEMICOLON	;
IF	if
LPAREN	(
LPAREN	(
ID	d
MUL	*
NUMBER	1	1
DIV	/
NUMBER	2	2
RPAREN	)
LESS	<
NUMBER	0	0
OR	||
LPAREN	(
ID	a
SUB	-
ID	b
RPAREN	)
NOTEQUAL	!=
NUMBER	0	0
AND	&&
LPAREN	(
ID	c
ADD	+
NUMBER	3	3
RPAREN	)
MOD	%
NUMBER	2	2
NOTEQUAL	!=
NUMBER	0	0
RPAREN	)
LBRACE	{
ID	putint
LPAREN	(
ID	result
RPAREN	)
SEMICOLON	;
RBRACE	}
IF	if
LPAREN	(
LPAREN	(
ID	d
MOD	%
NUMBER	2	2
ADD	+
NUMBER	67	67
RPAREN	)
LESS	<
NUMBER	0	0
OR	||
LPAREN	(
ID	a
SUB	-
ID	b
RPAREN	)
NOTEQUAL	!=
NUMBER	0	0
AND	&&
LPAREN	(
ID	c
ADD	+
NUMBER	2	2
RPAREN	)
MOD	%
NUMBER	2	2
NOTEQUAL	!=
NUMBER	0	0
RPAREN	)
LBRACE	{
ID	result
ASSIGN	=
NUMBER	4	4
SEMICOLON	;
ID	putint
LPAREN	(
ID	result
RPAREN	)
SEMICOLON	;
RBRACE	}
RETURN	return
NUMBER	0	0
SEMICOLON	;
RBRACE	}
